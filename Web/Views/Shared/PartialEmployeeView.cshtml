@model Data.Model.Employee

<script src="@Url.Content("~/Scripts/jquery.min.js ")" type="text/java script"></script>
<script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.min.js")" type="text/javascript "></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript "></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript "></script>

@Html.AntiForgeryToken()

<div class="modal-content">
    <div class="modal-header">
        <h4>Добавить сотрудника</h4>
        <button class="close" data-dismiss="modal" area-hidden="true">X</button>
    </div>
    @using (Ajax.BeginForm("AddEmployee", "Home", new AjaxOptions { UpdateTargetId = "results" }))
    {
        <div class="modal-content">
            <div class="modal-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="input-group">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
                </div>
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                <div class="input-group">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
                </div>
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                <div class="input-group">
                    @Html.DropDownListFor(model => model.PositionId, ViewBag.PositionList as IEnumerable<SelectListItem>, new { @class = "dropdown form-control" })
                    @*@Html.EditorFor(model => model.Employee.PositionId, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.LabelFor(model => model.PositionId, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
                </div>
                @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })

                <div class="input-group">
                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
                </div>
                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })

                <div class="input-group">
                    @Html.EditorFor(model => model.Hired, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Hired, htmlAttributes: new { @class = "label label-default mt-3 ml-2" })
                </div>
                @Html.ValidationMessageFor(model => model.Hired, "", new { @class = "text-danger" })

                <div class="input-group">
                    @Html.EditorFor(model => model.Fired, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.Fired, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
                </div>
                @Html.ValidationMessageFor(model => model.Fired, "", new { @class = "text-danger" })

                <div class="modal-footer">
                    <div>
                        <input type="button" value="Закрыть" class="btn btn-secondary close" data-dismiss="modal" />
                    </div>
                    <div class="input-group-append">
                        <input type="submit" value="Добавить" class="btn btn-primary send" />
                    </div>

                </div>
            </div>
        </div>
    }

</div>
