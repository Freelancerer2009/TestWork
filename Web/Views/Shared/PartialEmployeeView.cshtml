@model Data.Model.Employee

@Scripts.Render("~/bundles/unobtrusive")

@Html.AntiForgeryToken()

<div class="modal-content">
    <div class="modal-header">
        <h4>Добавить сотрудника</h4>
        <button class="close" data-dismiss="modal" area-hidden="true">X</button>
    </div>
    @using (@Html.BeginForm())
    {
    <div class="modal-content">
        <div class="modal-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="input-group">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
            </div>
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

            <div class="input-group">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
            </div>
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

            <div class="input-group">
                @Html.DropDownListFor(model => model.PositionId, ViewBag.PositionList as IEnumerable<SelectListItem>, new { @class = "dropdown form-control" })
                @Html.LabelFor(model => model.PositionId, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
            </div>
            @Html.ValidationMessageFor(model => model.PositionId, "", new { @class = "text-danger" })

            <div class="input-group">
                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
            </div>
            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })

            <div class="input-group">
                @Html.EditorFor(model => model.Hired, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Hired, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
            </div>
            @Html.ValidationMessageFor(model => model.Hired, "", new { @class = "text-danger" })

            <div class="input-group">
                @Html.EditorFor(model => model.Fired, new { htmlAttributes = new { @class = "form-control" } })
                @Html.LabelFor(model => model.Fired, htmlAttributes: new { @class = "label label-default mt-2 ml-2" })
            </div>
            @Html.ValidationMessageFor(model => model.Fired, "", new { @class = "text-danger" })

        </div>
        <div class="modal-footer">
            <div>
                <input type="button" value="Закрыть" class="btn btn-secondary " data-dismiss="modal" />
            </div>
            <div class="input-group-append">
                <input type="submit" value="Добавить" class="btn btn-primary send" />
            </div>

        </div>

    </div>
    }

</div>

